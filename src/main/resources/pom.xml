<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>net.wlodi.tools</groupId>
	<artifactId>tail</artifactId>
	<version>1.0.14</version>
	<packaging>jar</packaging>

	<name>tail</name>
	<url>http://wutail.wlodi.net</url>

	<properties>
		<proj.version>1.0.14</proj.version>
		<project.jar.name>WuTail-${proj.version}</project.jar.name>
		<project.zip.name>WuTail${proj.version}</project.zip.name>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<junit.version>4.12</junit.version>
		<logback.version>1.1.7</logback.version>
		<slf4j-api.version>1.7.21</slf4j-api.version>
		<build.timestamp>${maven.build.timestamp}</build.timestamp>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
		<download.link>http://wlodi.net/${project.zip.name}.zip</download.link>
	</properties>

	<prerequisites>
		<maven>3.0.0</maven>
	</prerequisites>

	<build>
		<plugins>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>display-dependency-updates</goal>
							<goal>display-plugin-updates</goal>

						</goals>
					</execution>
				</executions>
				<configuration>

				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/WuTail-lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<version>3.3</version>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
				<configuration>

					<!-- disable after updrae to new verion of maven-jar-plugin 
					<useDefaultManifestFile>true</useDefaultManifestFile> -->

					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>WuTail-lib/</classpathPrefix>
							<mainClass>net.wlodi.tools.tail.WuTail</mainClass>
						</manifest>
						<manifestEntries>
							<Build-Time>${maven.build.timestamp}</Build-Time>
						</manifestEntries>
					</archive>

					<source>1.7</source>
					<target>1.7</target>
					<compiler-version>1.7</compiler-version>

					<finalName>${project.jar.name}</finalName>

				</configuration>
			</plugin>

			<!-- Maven Assembly Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.6</version>

				<executions>
					<execution>

						<configuration>
							<finalName>${project.jar.name}-jar-with-dependencies</finalName>
							<!-- get all project dependencies -->
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
							<!-- MainClass in mainfest make a executable jar 
							<useDefaultManifestFile>true</useDefaultManifestFile>
							-->
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<classpathPrefix>WuTail-lib/</classpathPrefix>
									<mainClass>net.wlodi.tools.tail.WuTail</mainClass>
								</manifest>
								<manifestEntries>
									<Build-Time>${maven.build.timestamp}</Build-Time>
								</manifestEntries>
							</archive>
							<appendAssemblyId>false</appendAssemblyId>
						</configuration>

						<id>create-depdendencies-project</id>
						<!-- bind to the packaging phase -->
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>

					<execution>
						<configuration>
							<descriptors>
								<descriptor>src/assembly/dist-package.xml</descriptor>
							</descriptors>
							<finalName>${project.zip.name}</finalName>
							<appendAssemblyId>false</appendAssemblyId>
						</configuration>

						<id>create-dist-package</id>
						<!-- bind to the packaging phase -->
						<phase>package</phase>
						<goals>
							<goal>attached</goal>
						</goals>
					</execution>

				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>wagon-maven-plugin</artifactId>
				<version>1.0-beta-3</version>
				<!-- Contains unique execution declarations for CSS files, layout images 
					and war file. -->
				<executions>
					<!-- Declaration for copying ZIP file via FTP -->

					<!-- to run mvn wagon:upload@upload-zip -->
					<execution>
						<id>upload-zip</id>
						<!-- Describes the lifecycle phase when the plugin's goals are being 
							executed. -->
						<phase>deploy</phase>
						<!-- Describes the goals are executed in the specified lifecycle phase. -->
						<goals>
							<goal>upload</goal>
						</goals>
						<configuration>
							<!-- Describes the local directory, which contents are copied. -->
							<fromDir>${project.basedir}/target</fromDir>
							<!-- Describes the included files. -->
							<includes>*.zip</includes>
							<!-- Describes the remote directory, where the contents of the local 
								directory are copied. -->
							<!-- <toDir></toDir> -->
							<toDir>/wlodi.net/htdocs</toDir>
							<!-- Describes the server id, which is used to fetch the used credentials 
								from settings.xml. -->
						</configuration>
					</execution>

					<!-- to run mvn wagon:upload@upload-web -->
					<execution>
						<id>upload-web</id>
						<!-- Describes the lifecycle phase when the plugin's goals are being 
							executed. -->
						<phase>deploy</phase>
						<!-- Describes the goals are executed in the specified lifecycle phase. -->
						<goals>
							<goal>upload</goal>
						</goals>
						<configuration>
							<!-- Describes the local directory, which contents are copied. -->
							<fromDir>${project.basedir}/web/wutail</fromDir>
							<!-- Describes the included files. -->
							<includes>*/**</includes>
							<!-- Describes the remote directory, where the contents of the local 
								directory are copied. -->
							<!-- <toDir>/wutail</toDir> -->
							<toDir>/wutail.wlodi.net/htdocs</toDir>
							<!-- Describes the server id, which is used to fetch the used credentials 
								from settings.xml. -->
						</configuration>
					</execution>

					<!-- to run mvn wagon:upload@upload-web-html -->
					<execution>
						<id>upload-web-html</id>
						<!-- Describes the lifecycle phase when the plugin's goals are being 
							executed. -->
						<phase>deploy</phase>
						<!-- Describes the goals are executed in the specified lifecycle phase. -->
						<goals>
							<goal>upload</goal>
						</goals>
						<configuration>
							<!-- Describes the local directory, which contents are copied. -->
							<fromDir>${project.basedir}/web/wutail</fromDir>
							<!-- Describes the included files. -->
							<includes>*.html/**,version.txt</includes>
							<!-- Describes the remote directory, where the contents of the local 
								directory are copied. -->
							<!-- <toDir>/wutail</toDir> -->
							<toDir>/wutail.wlodi.net/htdocs</toDir>
							<!-- Describes the server id, which is used to fetch the used credentials 
								from settings.xml. -->
						</configuration>
					</execution>

					<!-- to run mvn wagon:upload@upload-web-css -->
					<execution>
						<id>upload-web-css</id>
						<!-- Describes the lifecycle phase when the plugin's goals are being 
							executed. -->
						<phase>deploy</phase>
						<!-- Describes the goals are executed in the specified lifecycle phase. -->
						<goals>
							<goal>upload</goal>
						</goals>
						<configuration>
							<!-- Describes the local directory, which contents are copied. -->
							<fromDir>${project.basedir}/web/wutail</fromDir>
							<!-- Describes the included files. -->
							<includes>styles/*.css/**</includes>
							<!-- Describes the remote directory, where the contents of the local 
								directory are copied. -->
							<!-- <toDir>/wutail</toDir> -->
							<toDir>/wutail.wlodi.net/htdocs</toDir>
							<!-- Describes the server id, which is used to fetch the used credentials 
								from settings.xml. -->
						</configuration>
					</execution>

					<!-- to run mvn wagon:upload@upload-web-js -->
					<execution>
						<id>upload-web-js</id>
						<!-- Describes the lifecycle phase when the plugin's goals are being 
							executed. -->
						<phase>deploy</phase>
						<!-- Describes the goals are executed in the specified lifecycle phase. -->
						<goals>
							<goal>upload</goal>
						</goals>
						<configuration>
							<!-- Describes the local directory, which contents are copied. -->
							<fromDir>${project.basedir}/web/wutail</fromDir>
							<!-- Describes the included files. -->
							<includes>scripts/*.js/**</includes>
							<!-- Describes the remote directory, where the contents of the local 
								directory are copied. -->
							<!-- <toDir>/wutail</toDir> -->
							<toDir>/wutail.wlodi.net/htdocs</toDir>
							<!-- Describes the server id, which is used to fetch the used credentials 
								from settings.xml. -->
						</configuration>
					</execution>

				</executions>
				<!-- password and user become from maven: settings.xml -->
				<configuration>
					<!-- <url>ftp://FTP.x07iecroadpn.az.pl</url> -->
					<url>ftp://ftp.ma7.eu</url>
					<serverId>wutail.wlodi.net</serverId>

				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>install</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/web/wutail</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/src/main/resources</directory>
									<includes>
										<include>version.txt</include>
									</includes>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

		<extensions>
			<!-- Enabling the use of Wagon file -->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>1.0</version>
			</extension>
		</extensions>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.1,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>versions-maven-plugin</artifactId>
										<versionRange>[2.1,)</versionRange>
										<goals>
											<goal>display-dependency-updates</goal>
											<goal>display-plugin-updates</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<repositories>
		<repository>
			<id>in-project</id>
			<name>In Project Repo</name>
			<url>file://${project.basedir}/libs</url>
		</repository>
	</repositories>

	<!-- username and password is set in settings.xml <distributionManagement> 
		<repository> <id>wlodi.net-wutail</id> <url>ftp://FTP.x07iecroadpn.az.pl</url> 
		</repository> </distributionManagement> -->

	<dependencies>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-configuration2</artifactId>
			<version>2.1</version>
		</dependency>

		<dependency>
			<groupId>args4j</groupId>
			<artifactId>args4j</artifactId>
			<version>2.33</version>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.10</version>
		</dependency>

		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>1.6.1</version>
			<exclusions>
				<exclusion>
					<artifactId>xml-apis</artifactId>
					<groupId>xml-apis</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>xml-apis</groupId>
			<artifactId>xml-apis</artifactId>
			<version>1.4.01</version>
		</dependency>


		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.8.2</version>
		</dependency>

		<dependency>
			<groupId>com.miglayout</groupId>
			<artifactId>miglayout</artifactId>
			<version>3.7.4</version>
		</dependency>


		<!-- SFTP -->
		<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jsch</artifactId>
			<version>0.1.54</version>
		</dependency>

		<!-- LOGS -->
		<!-- SLF4J - API -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j-api.version}</version>
		</dependency>

		<!-- TESTS -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>
